on:
  push:
    branches: [develop]

name: Terraform

defaults:
  run:
    working-directory: ./deploy

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Test and Lint
        run: |
          terraform init -backend=false
          terraform validate
          terraform fmt -check

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        working-directory: .
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: handover-teste
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:handover-teste .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:handover-teste
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:handover-teste"

      - name: Staging Plan
        run: |
          export TF_VAR_ecr_image_api=$ECR_REPOSITORY:handover-teste
          terraform init
          terraform workspace select staging || terraform workspace new staging
          terraform plan

      - name: Staging Apply
        run: |
          export TF_VAR_ecr_image_api=$ECR_REPOSITORY:handover-teste
          terraform init
          terraform workspace select staging
          terraform apply -auto-approve
